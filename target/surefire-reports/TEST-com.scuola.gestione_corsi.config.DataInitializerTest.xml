<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.scuola.gestione_corsi.config.DataInitializerTest" time="5.054" tests="2" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="23"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/luigimicheledelprincipe/Desktop/projectfinal_java/target/test-classes:/Users/luigimicheledelprincipe/Desktop/projectfinal_java/target/classes:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.3/spring-boot-starter-web-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.3/spring-boot-starter-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot/3.2.3/spring-boot-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.3/spring-boot-autoconfigure-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.3/spring-boot-starter-logging-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:/Users/luigimicheledelprincipe/.m2/repository/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/slf4j/jul-to-slf4j/2.0.12/jul-to-slf4j-2.0.12.jar:/Users/luigimicheledelprincipe/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.3/spring-boot-starter-json-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.4/jackson-datatype-jdk8-2.15.4.jar:/Users/luigimicheledelprincipe/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.4/jackson-datatype-jsr310-2.15.4.jar:/Users/luigimicheledelprincipe/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.4/jackson-module-parameter-names-2.15.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.3/spring-boot-starter-tomcat-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.19/tomcat-embed-core-10.1.19.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.19/tomcat-embed-websocket-10.1.19.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-web/6.1.4/spring-web-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-beans/6.1.4/spring-beans-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/io/micrometer/micrometer-observation/1.12.3/micrometer-observation-1.12.3.jar:/Users/luigimicheledelprincipe/.m2/repository/io/micrometer/micrometer-commons/1.12.3/micrometer-commons-1.12.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-webmvc/6.1.4/spring-webmvc-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-context/6.1.4/spring-context-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-expression/6.1.4/spring-expression-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.3/spring-boot-starter-data-jpa-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.3/spring-boot-starter-aop-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/aspectj/aspectjweaver/1.9.21/aspectjweaver-1.9.21.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.3/spring-boot-starter-jdbc-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-jdbc/6.1.4/spring-jdbc-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/hibernate/orm/hibernate-core/6.4.4.Final/hibernate-core-6.4.4.Final.jar:/Users/luigimicheledelprincipe/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/luigimicheledelprincipe/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/Users/luigimicheledelprincipe/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/luigimicheledelprincipe/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/luigimicheledelprincipe/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/Users/luigimicheledelprincipe/.m2/repository/net/bytebuddy/byte-buddy/1.14.12/byte-buddy-1.14.12.jar:/Users/luigimicheledelprincipe/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.4/jaxb-runtime-4.0.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.4/jaxb-core-4.0.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/glassfish/jaxb/txw2/4.0.4/txw2-4.0.4.jar:/Users/luigimicheledelprincipe/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/luigimicheledelprincipe/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/data/spring-data-jpa/3.2.3/spring-data-jpa-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/data/spring-data-commons/3.2.3/spring-data-commons-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-orm/6.1.4/spring-orm-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-tx/6.1.4/spring-tx-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/slf4j/slf4j-api/2.0.12/slf4j-api-2.0.12.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-aspects/6.1.4/spring-aspects-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.2.3/spring-boot-starter-validation-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.19/tomcat-embed-el-10.1.19.jar:/Users/luigimicheledelprincipe/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/luigimicheledelprincipe/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.2.3/spring-boot-starter-security-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-aop/6.1.4/spring-aop-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/security/spring-security-config/6.2.2/spring-security-config-6.2.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/security/spring-security-web/6.2.2/spring-security-web-6.2.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/postgresql/postgresql/42.6.1/postgresql-42.6.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/Users/luigimicheledelprincipe/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.3.0/springdoc-openapi-starter-webmvc-ui-2.3.0.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.3.0/springdoc-openapi-starter-webmvc-api-2.3.0.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.3.0/springdoc-openapi-starter-common-2.3.0.jar:/Users/luigimicheledelprincipe/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.19/swagger-core-jakarta-2.2.19.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/commons/commons-lang3/3.13.0/commons-lang3-3.13.0.jar:/Users/luigimicheledelprincipe/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.19/swagger-annotations-jakarta-2.2.19.jar:/Users/luigimicheledelprincipe/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.19/swagger-models-jakarta-2.2.19.jar:/Users/luigimicheledelprincipe/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.15.4/jackson-dataformat-yaml-2.15.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/webjars/swagger-ui/5.10.3/swagger-ui-5.10.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.3/spring-boot-starter-test-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-test/3.2.3/spring-boot-test-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.3/spring-boot-test-autoconfigure-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/luigimicheledelprincipe/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/Users/luigimicheledelprincipe/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/Users/luigimicheledelprincipe/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/Users/luigimicheledelprincipe/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/Users/luigimicheledelprincipe/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/awaitility/awaitility/4.2.0/awaitility-4.2.0.jar:/Users/luigimicheledelprincipe/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.2/junit-jupiter-5.10.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.2/junit-jupiter-api-5.10.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/luigimicheledelprincipe/.m2/repository/org/junit/platform/junit-platform-commons/1.10.2/junit-platform-commons-1.10.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.2/junit-jupiter-params-5.10.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.2/junit-jupiter-engine-5.10.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/junit/platform/junit-platform-engine/1.10.2/junit-platform-engine-1.10.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/Users/luigimicheledelprincipe/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.12/byte-buddy-agent-1.14.12.jar:/Users/luigimicheledelprincipe/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/Users/luigimicheledelprincipe/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/luigimicheledelprincipe/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-core/6.1.4/spring-core-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-jcl/6.1.4/spring-jcl-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-test/6.1.4/spring-test-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/security/spring-security-test/6.2.2/spring-security-test-6.2.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/security/spring-security-core/6.2.2/spring-security-core-6.2.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/security/spring-security-crypto/6.2.2/spring-security-crypto-6.2.2.jar:/Users/luigimicheledelprincipe/.m2/repository/io/jsonwebtoken/jjwt-api/0.11.5/jjwt-api-0.11.5.jar:/Users/luigimicheledelprincipe/.m2/repository/io/jsonwebtoken/jjwt-impl/0.11.5/jjwt-impl-0.11.5.jar:/Users/luigimicheledelprincipe/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.11.5/jjwt-jackson-0.11.5.jar:/Users/luigimicheledelprincipe/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.4/jackson-databind-2.15.4.jar:/Users/luigimicheledelprincipe/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.4/jackson-annotations-2.15.4.jar:/Users/luigimicheledelprincipe/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.4/jackson-core-2.15.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/poi/poi/5.2.3/poi-5.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/commons-codec/commons-codec/1.16.1/commons-codec-1.16.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/commons/commons-collections4/4.4/commons-collections4-4.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/Users/luigimicheledelprincipe/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/luigimicheledelprincipe/.m2/repository/com/zaxxer/SparseBitSet/1.2/SparseBitSet-1.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/poi/poi-ooxml/5.2.3/poi-ooxml-5.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/poi/poi-ooxml-lite/5.2.3/poi-ooxml-lite-5.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/xmlbeans/xmlbeans/5.1.1/xmlbeans-5.1.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/commons/commons-compress/1.21/commons-compress-1.21.jar:/Users/luigimicheledelprincipe/.m2/repository/com/github/virtuald/curvesapi/1.07/curvesapi-1.07.jar:/Users/luigimicheledelprincipe/.m2/repository/com/itextpdf/itextpdf/5.5.13.3/itextpdf-5.5.13.3.jar:"/>
    <property name="java.vm.vendor" value="Homebrew"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="user.timezone" value="Europe/Rome"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="23"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="IT"/>
    <property name="sun.boot.library.path" value="/opt/homebrew/Cellar/openjdk/23.0.1/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/luigimicheledelprincipe/Desktop/projectfinal_java/target/surefire/surefirebooter-20250423171110847_3.jar /Users/luigimicheledelprincipe/Desktop/projectfinal_java/target/surefire 2025-04-23T17-11-10_802-jvmRun1 surefire-20250423171110847_1tmp surefire_0-20250423171110847_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="test" value="DataInitializerTest"/>
    <property name="surefire.test.class.path" value="/Users/luigimicheledelprincipe/Desktop/projectfinal_java/target/test-classes:/Users/luigimicheledelprincipe/Desktop/projectfinal_java/target/classes:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.3/spring-boot-starter-web-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.3/spring-boot-starter-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot/3.2.3/spring-boot-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.3/spring-boot-autoconfigure-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.3/spring-boot-starter-logging-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:/Users/luigimicheledelprincipe/.m2/repository/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/slf4j/jul-to-slf4j/2.0.12/jul-to-slf4j-2.0.12.jar:/Users/luigimicheledelprincipe/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.3/spring-boot-starter-json-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.4/jackson-datatype-jdk8-2.15.4.jar:/Users/luigimicheledelprincipe/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.4/jackson-datatype-jsr310-2.15.4.jar:/Users/luigimicheledelprincipe/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.4/jackson-module-parameter-names-2.15.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.3/spring-boot-starter-tomcat-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.19/tomcat-embed-core-10.1.19.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.19/tomcat-embed-websocket-10.1.19.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-web/6.1.4/spring-web-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-beans/6.1.4/spring-beans-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/io/micrometer/micrometer-observation/1.12.3/micrometer-observation-1.12.3.jar:/Users/luigimicheledelprincipe/.m2/repository/io/micrometer/micrometer-commons/1.12.3/micrometer-commons-1.12.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-webmvc/6.1.4/spring-webmvc-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-context/6.1.4/spring-context-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-expression/6.1.4/spring-expression-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.3/spring-boot-starter-data-jpa-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.3/spring-boot-starter-aop-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/aspectj/aspectjweaver/1.9.21/aspectjweaver-1.9.21.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.3/spring-boot-starter-jdbc-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-jdbc/6.1.4/spring-jdbc-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/hibernate/orm/hibernate-core/6.4.4.Final/hibernate-core-6.4.4.Final.jar:/Users/luigimicheledelprincipe/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/luigimicheledelprincipe/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/Users/luigimicheledelprincipe/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/luigimicheledelprincipe/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/luigimicheledelprincipe/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/Users/luigimicheledelprincipe/.m2/repository/net/bytebuddy/byte-buddy/1.14.12/byte-buddy-1.14.12.jar:/Users/luigimicheledelprincipe/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.4/jaxb-runtime-4.0.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.4/jaxb-core-4.0.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/glassfish/jaxb/txw2/4.0.4/txw2-4.0.4.jar:/Users/luigimicheledelprincipe/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/luigimicheledelprincipe/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/data/spring-data-jpa/3.2.3/spring-data-jpa-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/data/spring-data-commons/3.2.3/spring-data-commons-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-orm/6.1.4/spring-orm-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-tx/6.1.4/spring-tx-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/slf4j/slf4j-api/2.0.12/slf4j-api-2.0.12.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-aspects/6.1.4/spring-aspects-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.2.3/spring-boot-starter-validation-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.19/tomcat-embed-el-10.1.19.jar:/Users/luigimicheledelprincipe/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/luigimicheledelprincipe/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.2.3/spring-boot-starter-security-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-aop/6.1.4/spring-aop-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/security/spring-security-config/6.2.2/spring-security-config-6.2.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/security/spring-security-web/6.2.2/spring-security-web-6.2.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/postgresql/postgresql/42.6.1/postgresql-42.6.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/Users/luigimicheledelprincipe/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.3.0/springdoc-openapi-starter-webmvc-ui-2.3.0.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.3.0/springdoc-openapi-starter-webmvc-api-2.3.0.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.3.0/springdoc-openapi-starter-common-2.3.0.jar:/Users/luigimicheledelprincipe/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.19/swagger-core-jakarta-2.2.19.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/commons/commons-lang3/3.13.0/commons-lang3-3.13.0.jar:/Users/luigimicheledelprincipe/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.19/swagger-annotations-jakarta-2.2.19.jar:/Users/luigimicheledelprincipe/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.19/swagger-models-jakarta-2.2.19.jar:/Users/luigimicheledelprincipe/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.15.4/jackson-dataformat-yaml-2.15.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/webjars/swagger-ui/5.10.3/swagger-ui-5.10.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.3/spring-boot-starter-test-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-test/3.2.3/spring-boot-test-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.3/spring-boot-test-autoconfigure-3.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/luigimicheledelprincipe/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/Users/luigimicheledelprincipe/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/Users/luigimicheledelprincipe/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/Users/luigimicheledelprincipe/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/Users/luigimicheledelprincipe/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/awaitility/awaitility/4.2.0/awaitility-4.2.0.jar:/Users/luigimicheledelprincipe/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.2/junit-jupiter-5.10.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.2/junit-jupiter-api-5.10.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/luigimicheledelprincipe/.m2/repository/org/junit/platform/junit-platform-commons/1.10.2/junit-platform-commons-1.10.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.2/junit-jupiter-params-5.10.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.2/junit-jupiter-engine-5.10.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/junit/platform/junit-platform-engine/1.10.2/junit-platform-engine-1.10.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/Users/luigimicheledelprincipe/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.12/byte-buddy-agent-1.14.12.jar:/Users/luigimicheledelprincipe/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/Users/luigimicheledelprincipe/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/luigimicheledelprincipe/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-core/6.1.4/spring-core-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-jcl/6.1.4/spring-jcl-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/spring-test/6.1.4/spring-test-6.1.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/security/spring-security-test/6.2.2/spring-security-test-6.2.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/security/spring-security-core/6.2.2/spring-security-core-6.2.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/springframework/security/spring-security-crypto/6.2.2/spring-security-crypto-6.2.2.jar:/Users/luigimicheledelprincipe/.m2/repository/io/jsonwebtoken/jjwt-api/0.11.5/jjwt-api-0.11.5.jar:/Users/luigimicheledelprincipe/.m2/repository/io/jsonwebtoken/jjwt-impl/0.11.5/jjwt-impl-0.11.5.jar:/Users/luigimicheledelprincipe/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.11.5/jjwt-jackson-0.11.5.jar:/Users/luigimicheledelprincipe/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.4/jackson-databind-2.15.4.jar:/Users/luigimicheledelprincipe/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.4/jackson-annotations-2.15.4.jar:/Users/luigimicheledelprincipe/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.4/jackson-core-2.15.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/poi/poi/5.2.3/poi-5.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/commons-codec/commons-codec/1.16.1/commons-codec-1.16.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/commons/commons-collections4/4.4/commons-collections4-4.4.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/Users/luigimicheledelprincipe/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/luigimicheledelprincipe/.m2/repository/com/zaxxer/SparseBitSet/1.2/SparseBitSet-1.2.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/poi/poi-ooxml/5.2.3/poi-ooxml-5.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/poi/poi-ooxml-lite/5.2.3/poi-ooxml-lite-5.2.3.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/xmlbeans/xmlbeans/5.1.1/xmlbeans-5.1.1.jar:/Users/luigimicheledelprincipe/.m2/repository/org/apache/commons/commons-compress/1.21/commons-compress-1.21.jar:/Users/luigimicheledelprincipe/.m2/repository/com/github/virtuald/curvesapi/1.07/curvesapi-1.07.jar:/Users/luigimicheledelprincipe/.m2/repository/com/itextpdf/itextpdf/5.5.13.3/itextpdf-5.5.13.3.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/luigimicheledelprincipe"/>
    <property name="user.language" value="it"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-10-15"/>
    <property name="java.home" value="/opt/homebrew/Cellar/openjdk/23.0.1/libexec/openjdk.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/luigimicheledelprincipe/Desktop/projectfinal_java"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/luigimicheledelprincipe/Desktop/projectfinal_java/target/surefire/surefirebooter-20250423171110847_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="23.0.1"/>
    <property name="user.name" value="luigimicheledelprincipe"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="15.1.1"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Homebrew"/>
    <property name="localRepository" value="/Users/luigimicheledelprincipe/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/xh/0q4xnzs966qgqlzqv95rzstw0000gn/T/"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="23.0.1"/>
    <property name="user.dir" value="/Users/luigimicheledelprincipe/Desktop/projectfinal_java"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="9074"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/luigimicheledelprincipe/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Homebrew"/>
    <property name="java.vm.version" value="23.0.1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="67.0"/>
    <property name="CONSOLE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"/>
  </properties>
  <testcase name="testInitDataIdempotency" classname="com.scuola.gestione_corsi.config.DataInitializerTest" time="0.64">
    <system-out><![CDATA[17:11:11.399 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.scuola.gestione_corsi.config.DataInitializerTest]: DataInitializerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
17:11:11.474 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.scuola.gestione_corsi.GestioneCorsiApplication for test class com.scuola.gestione_corsi.config.DataInitializerTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
&amp#27;[32m :: Spring Boot :: &amp#27;[39m              &amp#27;[2m (v3.2.3)&amp#27;[0;39m

2025-04-23 17:11:11 [main] INFO  c.s.g.config.DataInitializerTest - Starting DataInitializerTest using Java 23.0.1 with PID 9074 (started by luigimicheledelprincipe in /Users/luigimicheledelprincipe/Desktop/projectfinal_java)
2025-04-23 17:11:11 [main] DEBUG c.s.g.config.DataInitializerTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-04-23 17:11:11 [main] INFO  c.s.g.config.DataInitializerTest - No active profile set, falling back to 1 default profile: "default"
2025-04-23 17:11:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-23 17:11:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39 ms. Found 12 JPA repository interfaces.
2025-04-23 17:11:12 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-23 17:11:12 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-04-23 17:11:12 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-23 17:11:12 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-23 17:11:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-23 17:11:13 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1cc93da4
2025-04-23 17:11:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-23 17:11:13 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-23 17:11:13 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-23 17:11:13 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-23 17:11:14 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-23 17:11:14 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@e9c5db9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@393aac93, org.springframework.security.web.context.SecurityContextHolderFilter@5eb89000, org.springframework.security.web.header.HeaderWriterFilter@736af6f3, org.springframework.web.filter.CorsFilter@71dac63f, org.springframework.security.web.authentication.logout.LogoutFilter@5d414943, com.scuola.gestione_corsi.security.JwtAuthenticationFilter@69542112, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@77f1026e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1df8c7f4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@36003e90, org.springframework.security.web.session.SessionManagementFilter@680408ac, org.springframework.security.web.access.ExceptionTranslationFilter@23e54c8a, org.springframework.security.web.access.intercept.AuthorizationFilter@5e1d3188]
2025-04-23 17:11:14 [main] INFO  c.s.g.config.DataInitializerTest - Started DataInitializerTest in 3.398 seconds (process running for 4.03)
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        utenti u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        utenti u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        utenti
        (email, password, ruolo) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        utenti
        (email, password, ruolo) 
    values
        (?, ?, ?)
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        utenti u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        utenti u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        utenti
        (email, password, ruolo) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        utenti
        (email, password, ruolo) 
    values
        (?, ?, ?)
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        utenti u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        utenti u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        utenti
        (email, password, ruolo) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        utenti
        (email, password, ruolo) 
    values
        (?, ?, ?)
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id 
    from
        studenti s1_0 
    where
        s1_0.utente_id=? 
    fetch
        first ? rows only
Hibernate: 
    select
        s1_0.id 
    from
        studenti s1_0 
    where
        s1_0.utente_id=? 
    fetch
        first ? rows only
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        studenti
        (cognome, data_nascita, indirizzo, nome, telefono, utente_id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        studenti
        (cognome, data_nascita, indirizzo, nome, telefono, utente_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        d1_0.id 
    from
        docenti d1_0 
    where
        d1_0.utente_id=? 
    fetch
        first ? rows only
Hibernate: 
    select
        d1_0.id 
    from
        docenti d1_0 
    where
        d1_0.utente_id=? 
    fetch
        first ? rows only
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        docenti
        (cognome, cv, nome, specializzazione, tariffa, utente_id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        docenti
        (cognome, cv, nome, specializzazione, tariffa, utente_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        categorie c1_0 
    where
        c1_0.nome=? 
    fetch
        first ? rows only
Hibernate: 
    select
        c1_0.id 
    from
        categorie c1_0 
    where
        c1_0.nome=? 
    fetch
        first ? rows only
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        categorie
        (descrizione, icona, nome) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        categorie
        (descrizione, icona, nome) 
    values
        (?, ?, ?)
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        corsi c1_0 
    where
        c1_0.nome=? 
    fetch
        first ? rows only
Hibernate: 
    select
        c1_0.id 
    from
        corsi c1_0 
    where
        c1_0.nome=? 
    fetch
        first ? rows only
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        corsi
        (categoria_id, descrizione, durata, max_studenti, nome, prezzo) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        corsi
        (categoria_id, descrizione, durata, max_studenti, nome, prezzo) 
    values
        (?, ?, ?, ?, ?, ?)
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        corso_docente
        (corso_id, docente_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        corso_docente
        (corso_id, docente_id) 
    values
        (?, ?)
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        aule a1_0 
    where
        a1_0.nome=? 
    fetch
        first ? rows only
Hibernate: 
    select
        a1_0.id 
    from
        aule a1_0 
    where
        a1_0.nome=? 
    fetch
        first ? rows only
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        aule
        (capienza, nome) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        aule
        (capienza, nome) 
    values
        (?, ?)
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        l1_0.id 
    from
        lezioni l1_0 
    where
        l1_0.titolo=? 
    fetch
        first ? rows only
Hibernate: 
    select
        l1_0.id 
    from
        lezioni l1_0 
    where
        l1_0.titolo=? 
    fetch
        first ? rows only
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        lezioni
        (aula_id, corso_id, data_ora, descrizione, docente_id, durata, titolo) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        lezioni
        (aula_id, corso_id, data_ora, descrizione, docente_id, durata, titolo) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        md1_0.id 
    from
        materiali_didattici md1_0 
    where
        md1_0.titolo=? 
    fetch
        first ? rows only
Hibernate: 
    select
        md1_0.id 
    from
        materiali_didattici md1_0 
    where
        md1_0.titolo=? 
    fetch
        first ? rows only
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        materiali_didattici
        (lezione_id, tipo, titolo, url) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        materiali_didattici
        (lezione_id, tipo, titolo, url) 
    values
        (?, ?, ?, ?)
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        i1_0.id 
    from
        iscrizioni i1_0 
    where
        i1_0.studente_id=? 
        and i1_0.corso_id=? 
    fetch
        first ? rows only
Hibernate: 
    select
        i1_0.id 
    from
        iscrizioni i1_0 
    where
        i1_0.studente_id=? 
        and i1_0.corso_id=? 
    fetch
        first ? rows only
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        iscrizioni
        (corso_id, data_iscrizione, metodo_pagamento, stato, studente_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        iscrizioni
        (corso_id, data_iscrizione, metodo_pagamento, stato, studente_id) 
    values
        (?, ?, ?, ?, ?)
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        v1_0.id 
    from
        valutazioni v1_0 
    where
        v1_0.iscrizione_id=? 
    fetch
        first ? rows only
Hibernate: 
    select
        v1_0.id 
    from
        valutazioni v1_0 
    where
        v1_0.iscrizione_id=? 
    fetch
        first ? rows only
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        valutazioni
        (commento, data_valutazione, iscrizione_id, voto) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        valutazioni
        (commento, data_valutazione, iscrizione_id, voto) 
    values
        (?, ?, ?, ?)
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id 
    from
        pagamenti p1_0 
    where
        p1_0.iscrizione_id=? 
    fetch
        first ? rows only
Hibernate: 
    select
        p1_0.id 
    from
        pagamenti p1_0 
    where
        p1_0.iscrizione_id=? 
    fetch
        first ? rows only
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        pagamenti
        (data_pagamento, importo, iscrizione_id, metodo_pagamento) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pagamenti
        (data_pagamento, importo, iscrizione_id, metodo_pagamento) 
    values
        (?, ?, ?, ?)
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id 
    from
        presenze p1_0 
    where
        p1_0.iscrizione_id=? 
        and p1_0.lezione_id=? 
    fetch
        first ? rows only
Hibernate: 
    select
        p1_0.id 
    from
        presenze p1_0 
    where
        p1_0.iscrizione_id=? 
        and p1_0.lezione_id=? 
    fetch
        first ? rows only
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        presenze
        (data_presenza, iscrizione_id, lezione_id, presente) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        presenze
        (data_presenza, iscrizione_id, lezione_id, presente) 
    values
        (?, ?, ?, ?)
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.data_presenza,
        p1_0.iscrizione_id,
        p1_0.lezione_id,
        p1_0.presente 
    from
        presenze p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.data_presenza,
        p1_0.iscrizione_id,
        p1_0.lezione_id,
        p1_0.presente 
    from
        presenze p1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        i1_0.data_iscrizione,
        i1_0.metodo_pagamento,
        i1_0.stato,
        i1_0.studente_id,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        iscrizioni i1_0 
    join
        corsi c1_0 
            on c1_0.id=i1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    join
        studenti s1_0 
            on s1_0.id=i1_0.studente_id 
    left join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        i1_0.id=?
Hibernate: 
    select
        i1_0.id,
        i1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        i1_0.data_iscrizione,
        i1_0.metodo_pagamento,
        i1_0.stato,
        i1_0.studente_id,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        iscrizioni i1_0 
    join
        corsi c1_0 
            on c1_0.id=i1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    join
        studenti s1_0 
            on s1_0.id=i1_0.studente_id 
    left join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        i1_0.id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        l1_0.id,
        l1_0.aula_id,
        a1_0.id,
        a1_0.capienza,
        a1_0.nome,
        l1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        l1_0.data_ora,
        l1_0.descrizione,
        l1_0.docente_id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        l1_0.durata,
        l1_0.titolo 
    from
        lezioni l1_0 
    join
        aule a1_0 
            on a1_0.id=l1_0.aula_id 
    join
        corsi c1_0 
            on c1_0.id=l1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    join
        docenti d1_0 
            on d1_0.id=l1_0.docente_id 
    left join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        l1_0.id=?
Hibernate: 
    select
        l1_0.id,
        l1_0.aula_id,
        a1_0.id,
        a1_0.capienza,
        a1_0.nome,
        l1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        l1_0.data_ora,
        l1_0.descrizione,
        l1_0.docente_id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        l1_0.durata,
        l1_0.titolo 
    from
        lezioni l1_0 
    join
        aule a1_0 
            on a1_0.id=l1_0.aula_id 
    join
        corsi c1_0 
            on c1_0.id=l1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    join
        docenti d1_0 
            on d1_0.id=l1_0.docente_id 
    left join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        l1_0.id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        presenze 
    where
        id=?
Hibernate: 
    delete 
    from
        presenze 
    where
        id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.data_pagamento,
        p1_0.importo,
        p1_0.iscrizione_id,
        p1_0.metodo_pagamento 
    from
        pagamenti p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.data_pagamento,
        p1_0.importo,
        p1_0.iscrizione_id,
        p1_0.metodo_pagamento 
    from
        pagamenti p1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        i1_0.data_iscrizione,
        i1_0.metodo_pagamento,
        i1_0.stato,
        i1_0.studente_id,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        iscrizioni i1_0 
    join
        corsi c1_0 
            on c1_0.id=i1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    join
        studenti s1_0 
            on s1_0.id=i1_0.studente_id 
    left join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        i1_0.id=?
Hibernate: 
    select
        i1_0.id,
        i1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        i1_0.data_iscrizione,
        i1_0.metodo_pagamento,
        i1_0.stato,
        i1_0.studente_id,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        iscrizioni i1_0 
    join
        corsi c1_0 
            on c1_0.id=i1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    join
        studenti s1_0 
            on s1_0.id=i1_0.studente_id 
    left join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        i1_0.id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        pagamenti 
    where
        id=?
Hibernate: 
    delete 
    from
        pagamenti 
    where
        id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.commento,
        v1_0.data_valutazione,
        v1_0.iscrizione_id,
        v1_0.voto 
    from
        valutazioni v1_0
Hibernate: 
    select
        v1_0.id,
        v1_0.commento,
        v1_0.data_valutazione,
        v1_0.iscrizione_id,
        v1_0.voto 
    from
        valutazioni v1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        i1_0.data_iscrizione,
        i1_0.metodo_pagamento,
        i1_0.stato,
        i1_0.studente_id,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        iscrizioni i1_0 
    join
        corsi c1_0 
            on c1_0.id=i1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    join
        studenti s1_0 
            on s1_0.id=i1_0.studente_id 
    left join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        i1_0.id=?
Hibernate: 
    select
        i1_0.id,
        i1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        i1_0.data_iscrizione,
        i1_0.metodo_pagamento,
        i1_0.stato,
        i1_0.studente_id,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        iscrizioni i1_0 
    join
        corsi c1_0 
            on c1_0.id=i1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    join
        studenti s1_0 
            on s1_0.id=i1_0.studente_id 
    left join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        i1_0.id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        valutazioni 
    where
        id=?
Hibernate: 
    delete 
    from
        valutazioni 
    where
        id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.corso_id,
        i1_0.data_iscrizione,
        i1_0.metodo_pagamento,
        i1_0.stato,
        i1_0.studente_id 
    from
        iscrizioni i1_0
Hibernate: 
    select
        i1_0.id,
        i1_0.corso_id,
        i1_0.data_iscrizione,
        i1_0.metodo_pagamento,
        i1_0.stato,
        i1_0.studente_id 
    from
        iscrizioni i1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo 
    from
        corsi c1_0 
    join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    where
        c1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo 
    from
        corsi c1_0 
    join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    where
        c1_0.id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        studenti s1_0 
    join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        s1_0.id=?
Hibernate: 
    select
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        studenti s1_0 
    join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        s1_0.id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.iscrizione_id,
        p1_0.id,
        p1_0.data_pagamento,
        p1_0.importo,
        p1_0.metodo_pagamento 
    from
        pagamenti p1_0 
    where
        p1_0.iscrizione_id=?
Hibernate: 
    select
        p1_0.iscrizione_id,
        p1_0.id,
        p1_0.data_pagamento,
        p1_0.importo,
        p1_0.metodo_pagamento 
    from
        pagamenti p1_0 
    where
        p1_0.iscrizione_id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.iscrizione_id,
        p1_0.id,
        p1_0.data_presenza,
        l1_0.id,
        l1_0.aula_id,
        a1_0.id,
        a1_0.capienza,
        a1_0.nome,
        l1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        l1_0.data_ora,
        l1_0.descrizione,
        l1_0.docente_id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        l1_0.durata,
        l1_0.titolo,
        p1_0.presente 
    from
        presenze p1_0 
    left join
        lezioni l1_0 
            on l1_0.id=p1_0.lezione_id 
    left join
        aule a1_0 
            on a1_0.id=l1_0.aula_id 
    left join
        corsi c1_0 
            on c1_0.id=l1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    left join
        docenti d1_0 
            on d1_0.id=l1_0.docente_id 
    left join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        p1_0.iscrizione_id=?
Hibernate: 
    select
        p1_0.iscrizione_id,
        p1_0.id,
        p1_0.data_presenza,
        l1_0.id,
        l1_0.aula_id,
        a1_0.id,
        a1_0.capienza,
        a1_0.nome,
        l1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        l1_0.data_ora,
        l1_0.descrizione,
        l1_0.docente_id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        l1_0.durata,
        l1_0.titolo,
        p1_0.presente 
    from
        presenze p1_0 
    left join
        lezioni l1_0 
            on l1_0.id=p1_0.lezione_id 
    left join
        aule a1_0 
            on a1_0.id=l1_0.aula_id 
    left join
        corsi c1_0 
            on c1_0.id=l1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    left join
        docenti d1_0 
            on d1_0.id=l1_0.docente_id 
    left join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        p1_0.iscrizione_id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        v1_0.iscrizione_id,
        v1_0.id,
        v1_0.commento,
        v1_0.data_valutazione,
        v1_0.voto 
    from
        valutazioni v1_0 
    where
        v1_0.iscrizione_id=?
Hibernate: 
    select
        v1_0.iscrizione_id,
        v1_0.id,
        v1_0.commento,
        v1_0.data_valutazione,
        v1_0.voto 
    from
        valutazioni v1_0 
    where
        v1_0.iscrizione_id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        iscrizioni 
    where
        id=?
Hibernate: 
    delete 
    from
        iscrizioni 
    where
        id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        md1_0.id,
        md1_0.lezione_id,
        md1_0.tipo,
        md1_0.titolo,
        md1_0.url 
    from
        materiali_didattici md1_0
Hibernate: 
    select
        md1_0.id,
        md1_0.lezione_id,
        md1_0.tipo,
        md1_0.titolo,
        md1_0.url 
    from
        materiali_didattici md1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        l1_0.id,
        l1_0.aula_id,
        a1_0.id,
        a1_0.capienza,
        a1_0.nome,
        l1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        l1_0.data_ora,
        l1_0.descrizione,
        l1_0.docente_id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        l1_0.durata,
        l1_0.titolo 
    from
        lezioni l1_0 
    join
        aule a1_0 
            on a1_0.id=l1_0.aula_id 
    join
        corsi c1_0 
            on c1_0.id=l1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    join
        docenti d1_0 
            on d1_0.id=l1_0.docente_id 
    left join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        l1_0.id=?
Hibernate: 
    select
        l1_0.id,
        l1_0.aula_id,
        a1_0.id,
        a1_0.capienza,
        a1_0.nome,
        l1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        l1_0.data_ora,
        l1_0.descrizione,
        l1_0.docente_id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        l1_0.durata,
        l1_0.titolo 
    from
        lezioni l1_0 
    join
        aule a1_0 
            on a1_0.id=l1_0.aula_id 
    join
        corsi c1_0 
            on c1_0.id=l1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    join
        docenti d1_0 
            on d1_0.id=l1_0.docente_id 
    left join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        l1_0.id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        materiali_didattici 
    where
        id=?
Hibernate: 
    delete 
    from
        materiali_didattici 
    where
        id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        l1_0.id,
        l1_0.aula_id,
        l1_0.corso_id,
        l1_0.data_ora,
        l1_0.descrizione,
        l1_0.docente_id,
        l1_0.durata,
        l1_0.titolo 
    from
        lezioni l1_0
Hibernate: 
    select
        l1_0.id,
        l1_0.aula_id,
        l1_0.corso_id,
        l1_0.data_ora,
        l1_0.descrizione,
        l1_0.docente_id,
        l1_0.durata,
        l1_0.titolo 
    from
        lezioni l1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.capienza,
        a1_0.nome 
    from
        aule a1_0 
    where
        a1_0.id=?
Hibernate: 
    select
        a1_0.id,
        a1_0.capienza,
        a1_0.nome 
    from
        aule a1_0 
    where
        a1_0.id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo 
    from
        corsi c1_0 
    join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    where
        c1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo 
    from
        corsi c1_0 
    join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    where
        c1_0.id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        docenti d1_0 
    join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        d1_0.id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        docenti d1_0 
    join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        d1_0.id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        m1_0.lezione_id,
        m1_0.id,
        m1_0.tipo,
        m1_0.titolo,
        m1_0.url 
    from
        materiali_didattici m1_0 
    where
        m1_0.lezione_id=?
Hibernate: 
    select
        m1_0.lezione_id,
        m1_0.id,
        m1_0.tipo,
        m1_0.titolo,
        m1_0.url 
    from
        materiali_didattici m1_0 
    where
        m1_0.lezione_id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        lezioni 
    where
        id=?
Hibernate: 
    delete 
    from
        lezioni 
    where
        id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.capienza,
        a1_0.nome 
    from
        aule a1_0
Hibernate: 
    select
        a1_0.id,
        a1_0.capienza,
        a1_0.nome 
    from
        aule a1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        l1_0.aula_id,
        l1_0.id,
        l1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        l1_0.data_ora,
        l1_0.descrizione,
        l1_0.docente_id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        l1_0.durata,
        l1_0.titolo 
    from
        lezioni l1_0 
    left join
        corsi c1_0 
            on c1_0.id=l1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    left join
        docenti d1_0 
            on d1_0.id=l1_0.docente_id 
    left join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        l1_0.aula_id=?
Hibernate: 
    select
        l1_0.aula_id,
        l1_0.id,
        l1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        l1_0.data_ora,
        l1_0.descrizione,
        l1_0.docente_id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        l1_0.durata,
        l1_0.titolo 
    from
        lezioni l1_0 
    left join
        corsi c1_0 
            on c1_0.id=l1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    left join
        docenti d1_0 
            on d1_0.id=l1_0.docente_id 
    left join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        l1_0.aula_id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        aule 
    where
        id=?
Hibernate: 
    delete 
    from
        aule 
    where
        id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.categoria_id,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo 
    from
        corsi c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.categoria_id,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo 
    from
        corsi c1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.descrizione,
        c1_0.icona,
        c1_0.nome 
    from
        categorie c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.descrizione,
        c1_0.icona,
        c1_0.nome 
    from
        categorie c1_0 
    where
        c1_0.id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        i1_0.corso_id,
        i1_0.id,
        i1_0.data_iscrizione,
        i1_0.metodo_pagamento,
        i1_0.stato,
        i1_0.studente_id,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        iscrizioni i1_0 
    left join
        studenti s1_0 
            on s1_0.id=i1_0.studente_id 
    left join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        i1_0.corso_id=?
Hibernate: 
    select
        i1_0.corso_id,
        i1_0.id,
        i1_0.data_iscrizione,
        i1_0.metodo_pagamento,
        i1_0.stato,
        i1_0.studente_id,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        iscrizioni i1_0 
    left join
        studenti s1_0 
            on s1_0.id=i1_0.studente_id 
    left join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        i1_0.corso_id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        l1_0.corso_id,
        l1_0.id,
        l1_0.aula_id,
        a1_0.id,
        a1_0.capienza,
        a1_0.nome,
        l1_0.data_ora,
        l1_0.descrizione,
        l1_0.docente_id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        l1_0.durata,
        l1_0.titolo 
    from
        lezioni l1_0 
    left join
        aule a1_0 
            on a1_0.id=l1_0.aula_id 
    left join
        docenti d1_0 
            on d1_0.id=l1_0.docente_id 
    left join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        l1_0.corso_id=?
Hibernate: 
    select
        l1_0.corso_id,
        l1_0.id,
        l1_0.aula_id,
        a1_0.id,
        a1_0.capienza,
        a1_0.nome,
        l1_0.data_ora,
        l1_0.descrizione,
        l1_0.docente_id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        l1_0.durata,
        l1_0.titolo 
    from
        lezioni l1_0 
    left join
        aule a1_0 
            on a1_0.id=l1_0.aula_id 
    left join
        docenti d1_0 
            on d1_0.id=l1_0.docente_id 
    left join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        l1_0.corso_id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        corso_docente 
    where
        corso_id=?
Hibernate: 
    delete 
    from
        corso_docente 
    where
        corso_id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        corsi 
    where
        id=?
Hibernate: 
    delete 
    from
        corsi 
    where
        id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.descrizione,
        c1_0.icona,
        c1_0.nome 
    from
        categorie c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.descrizione,
        c1_0.icona,
        c1_0.nome 
    from
        categorie c1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.categoria_id,
        c1_0.id,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo 
    from
        corsi c1_0 
    where
        c1_0.categoria_id=?
Hibernate: 
    select
        c1_0.categoria_id,
        c1_0.id,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo 
    from
        corsi c1_0 
    where
        c1_0.categoria_id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        categorie 
    where
        id=?
Hibernate: 
    delete 
    from
        categorie 
    where
        id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id 
    from
        docenti d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id 
    from
        docenti d1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        utenti u1_0 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        utenti u1_0 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        u1_0.id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        l1_0.docente_id,
        l1_0.id,
        l1_0.aula_id,
        a1_0.id,
        a1_0.capienza,
        a1_0.nome,
        l1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        l1_0.data_ora,
        l1_0.descrizione,
        l1_0.durata,
        l1_0.titolo 
    from
        lezioni l1_0 
    left join
        aule a1_0 
            on a1_0.id=l1_0.aula_id 
    left join
        corsi c1_0 
            on c1_0.id=l1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    where
        l1_0.docente_id=?
Hibernate: 
    select
        l1_0.docente_id,
        l1_0.id,
        l1_0.aula_id,
        a1_0.id,
        a1_0.capienza,
        a1_0.nome,
        l1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        l1_0.data_ora,
        l1_0.descrizione,
        l1_0.durata,
        l1_0.titolo 
    from
        lezioni l1_0 
    left join
        aule a1_0 
            on a1_0.id=l1_0.aula_id 
    left join
        corsi c1_0 
            on c1_0.id=l1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    where
        l1_0.docente_id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        studenti s1_0
Hibernate: 
    select
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        studenti s1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        utenti u1_0 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        utenti u1_0 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        u1_0.id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        i1_0.studente_id,
        i1_0.id,
        i1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        i1_0.data_iscrizione,
        i1_0.metodo_pagamento,
        i1_0.stato 
    from
        iscrizioni i1_0 
    left join
        corsi c1_0 
            on c1_0.id=i1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    where
        i1_0.studente_id=?
Hibernate: 
    select
        i1_0.studente_id,
        i1_0.id,
        i1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        i1_0.data_iscrizione,
        i1_0.metodo_pagamento,
        i1_0.stato 
    from
        iscrizioni i1_0 
    left join
        corsi c1_0 
            on c1_0.id=i1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    where
        i1_0.studente_id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        utenti u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        utenti u1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        docenti d1_0 
    join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        d1_0.utente_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        docenti d1_0 
    join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        d1_0.utente_id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        studenti s1_0 
    join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        s1_0.utente_id=?
Hibernate: 
    select
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        studenti s1_0 
    join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        s1_0.utente_id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        docenti d1_0 
    join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        d1_0.utente_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        docenti d1_0 
    join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        d1_0.utente_id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        studenti s1_0 
    join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        s1_0.utente_id=?
Hibernate: 
    select
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        studenti s1_0 
    join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        s1_0.utente_id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        docenti d1_0 
    join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        d1_0.utente_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        docenti d1_0 
    join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        d1_0.utente_id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        studenti s1_0 
    join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        s1_0.utente_id=?
Hibernate: 
    select
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        studenti s1_0 
    join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        s1_0.utente_id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        l1_0.docente_id,
        l1_0.id,
        l1_0.aula_id,
        a1_0.id,
        a1_0.capienza,
        a1_0.nome,
        l1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        l1_0.data_ora,
        l1_0.descrizione,
        l1_0.durata,
        l1_0.titolo 
    from
        lezioni l1_0 
    left join
        aule a1_0 
            on a1_0.id=l1_0.aula_id 
    left join
        corsi c1_0 
            on c1_0.id=l1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    where
        l1_0.docente_id=?
Hibernate: 
    select
        l1_0.docente_id,
        l1_0.id,
        l1_0.aula_id,
        a1_0.id,
        a1_0.capienza,
        a1_0.nome,
        l1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        l1_0.data_ora,
        l1_0.descrizione,
        l1_0.durata,
        l1_0.titolo 
    from
        lezioni l1_0 
    left join
        aule a1_0 
            on a1_0.id=l1_0.aula_id 
    left join
        corsi c1_0 
            on c1_0.id=l1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    where
        l1_0.docente_id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        i1_0.studente_id,
        i1_0.id,
        i1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        i1_0.data_iscrizione,
        i1_0.metodo_pagamento,
        i1_0.stato 
    from
        iscrizioni i1_0 
    left join
        corsi c1_0 
            on c1_0.id=i1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    where
        i1_0.studente_id=?
Hibernate: 
    select
        i1_0.studente_id,
        i1_0.id,
        i1_0.corso_id,
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo,
        i1_0.data_iscrizione,
        i1_0.metodo_pagamento,
        i1_0.stato 
    from
        iscrizioni i1_0 
    left join
        corsi c1_0 
            on c1_0.id=i1_0.corso_id 
    left join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    where
        i1_0.studente_id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        utenti 
    where
        id=?
Hibernate: 
    delete 
    from
        utenti 
    where
        id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        docenti 
    where
        id=?
Hibernate: 
    delete 
    from
        docenti 
    where
        id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        utenti 
    where
        id=?
Hibernate: 
    delete 
    from
        utenti 
    where
        id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        studenti 
    where
        id=?
Hibernate: 
    delete 
    from
        studenti 
    where
        id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        utenti 
    where
        id=?
Hibernate: 
    delete 
    from
        utenti 
    where
        id=?
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        utenti u1_0
Hibernate: 
    select
        count(*) 
    from
        utenti u1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        studenti s1_0
Hibernate: 
    select
        count(*) 
    from
        studenti s1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        docenti d1_0
Hibernate: 
    select
        count(*) 
    from
        docenti d1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        categorie c1_0
Hibernate: 
    select
        count(*) 
    from
        categorie c1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        corsi c1_0
Hibernate: 
    select
        count(*) 
    from
        corsi c1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        iscrizioni i1_0
Hibernate: 
    select
        count(*) 
    from
        iscrizioni i1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        lezioni l1_0
Hibernate: 
    select
        count(*) 
    from
        lezioni l1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        aule a1_0
Hibernate: 
    select
        count(*) 
    from
        aule a1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        materiali_didattici md1_0
Hibernate: 
    select
        count(*) 
    from
        materiali_didattici md1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        valutazioni v1_0
Hibernate: 
    select
        count(*) 
    from
        valutazioni v1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        pagamenti p1_0
Hibernate: 
    select
        count(*) 
    from
        pagamenti p1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        presenze p1_0
Hibernate: 
    select
        count(*) 
    from
        presenze p1_0
2025-04-23 17:11:15 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        utenti u1_0
Hibernate: 
    select
        count(*) 
    from
        utenti u1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        studenti s1_0
Hibernate: 
    select
        count(*) 
    from
        studenti s1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        docenti d1_0
Hibernate: 
    select
        count(*) 
    from
        docenti d1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        categorie c1_0
Hibernate: 
    select
        count(*) 
    from
        categorie c1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        corsi c1_0
Hibernate: 
    select
        count(*) 
    from
        corsi c1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        iscrizioni i1_0
Hibernate: 
    select
        count(*) 
    from
        iscrizioni i1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        lezioni l1_0
Hibernate: 
    select
        count(*) 
    from
        lezioni l1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        aule a1_0
Hibernate: 
    select
        count(*) 
    from
        aule a1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        materiali_didattici md1_0
Hibernate: 
    select
        count(*) 
    from
        materiali_didattici md1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        valutazioni v1_0
Hibernate: 
    select
        count(*) 
    from
        valutazioni v1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        pagamenti p1_0
Hibernate: 
    select
        count(*) 
    from
        pagamenti p1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        presenze p1_0
Hibernate: 
    select
        count(*) 
    from
        presenze p1_0
]]></system-out>
    <system-err><![CDATA[WARNING: A Java agent has been loaded dynamically (/Users/luigimicheledelprincipe/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.12/byte-buddy-agent-1.14.12.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
  </testcase>
  <testcase name="testInitData" classname="com.scuola.gestione_corsi.config.DataInitializerTest" time="0.313">
    <system-out><![CDATA[2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.data_presenza,
        p1_0.iscrizione_id,
        p1_0.lezione_id,
        p1_0.presente 
    from
        presenze p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.data_presenza,
        p1_0.iscrizione_id,
        p1_0.lezione_id,
        p1_0.presente 
    from
        presenze p1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.data_pagamento,
        p1_0.importo,
        p1_0.iscrizione_id,
        p1_0.metodo_pagamento 
    from
        pagamenti p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.data_pagamento,
        p1_0.importo,
        p1_0.iscrizione_id,
        p1_0.metodo_pagamento 
    from
        pagamenti p1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.commento,
        v1_0.data_valutazione,
        v1_0.iscrizione_id,
        v1_0.voto 
    from
        valutazioni v1_0
Hibernate: 
    select
        v1_0.id,
        v1_0.commento,
        v1_0.data_valutazione,
        v1_0.iscrizione_id,
        v1_0.voto 
    from
        valutazioni v1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.corso_id,
        i1_0.data_iscrizione,
        i1_0.metodo_pagamento,
        i1_0.stato,
        i1_0.studente_id 
    from
        iscrizioni i1_0
Hibernate: 
    select
        i1_0.id,
        i1_0.corso_id,
        i1_0.data_iscrizione,
        i1_0.metodo_pagamento,
        i1_0.stato,
        i1_0.studente_id 
    from
        iscrizioni i1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        md1_0.id,
        md1_0.lezione_id,
        md1_0.tipo,
        md1_0.titolo,
        md1_0.url 
    from
        materiali_didattici md1_0
Hibernate: 
    select
        md1_0.id,
        md1_0.lezione_id,
        md1_0.tipo,
        md1_0.titolo,
        md1_0.url 
    from
        materiali_didattici md1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        l1_0.id,
        l1_0.aula_id,
        l1_0.corso_id,
        l1_0.data_ora,
        l1_0.descrizione,
        l1_0.docente_id,
        l1_0.durata,
        l1_0.titolo 
    from
        lezioni l1_0
Hibernate: 
    select
        l1_0.id,
        l1_0.aula_id,
        l1_0.corso_id,
        l1_0.data_ora,
        l1_0.descrizione,
        l1_0.docente_id,
        l1_0.durata,
        l1_0.titolo 
    from
        lezioni l1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.capienza,
        a1_0.nome 
    from
        aule a1_0
Hibernate: 
    select
        a1_0.id,
        a1_0.capienza,
        a1_0.nome 
    from
        aule a1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.categoria_id,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo 
    from
        corsi c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.categoria_id,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo 
    from
        corsi c1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.descrizione,
        c1_0.icona,
        c1_0.nome 
    from
        categorie c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.descrizione,
        c1_0.icona,
        c1_0.nome 
    from
        categorie c1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id 
    from
        docenti d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id 
    from
        docenti d1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        studenti s1_0
Hibernate: 
    select
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        studenti s1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        utenti u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        utenti u1_0
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        utenti u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        utenti u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        utenti
        (email, password, ruolo) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        utenti
        (email, password, ruolo) 
    values
        (?, ?, ?)
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        utenti u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        utenti u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        utenti
        (email, password, ruolo) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        utenti
        (email, password, ruolo) 
    values
        (?, ?, ?)
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        utenti u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        utenti u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        utenti
        (email, password, ruolo) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        utenti
        (email, password, ruolo) 
    values
        (?, ?, ?)
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id 
    from
        studenti s1_0 
    where
        s1_0.utente_id=? 
    fetch
        first ? rows only
Hibernate: 
    select
        s1_0.id 
    from
        studenti s1_0 
    where
        s1_0.utente_id=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        studenti
        (cognome, data_nascita, indirizzo, nome, telefono, utente_id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        studenti
        (cognome, data_nascita, indirizzo, nome, telefono, utente_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        d1_0.id 
    from
        docenti d1_0 
    where
        d1_0.utente_id=? 
    fetch
        first ? rows only
Hibernate: 
    select
        d1_0.id 
    from
        docenti d1_0 
    where
        d1_0.utente_id=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        docenti
        (cognome, cv, nome, specializzazione, tariffa, utente_id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        docenti
        (cognome, cv, nome, specializzazione, tariffa, utente_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        categorie c1_0 
    where
        c1_0.nome=? 
    fetch
        first ? rows only
Hibernate: 
    select
        c1_0.id 
    from
        categorie c1_0 
    where
        c1_0.nome=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        categorie
        (descrizione, icona, nome) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        categorie
        (descrizione, icona, nome) 
    values
        (?, ?, ?)
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        corsi c1_0 
    where
        c1_0.nome=? 
    fetch
        first ? rows only
Hibernate: 
    select
        c1_0.id 
    from
        corsi c1_0 
    where
        c1_0.nome=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        corsi
        (categoria_id, descrizione, durata, max_studenti, nome, prezzo) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        corsi
        (categoria_id, descrizione, durata, max_studenti, nome, prezzo) 
    values
        (?, ?, ?, ?, ?, ?)
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        corso_docente
        (corso_id, docente_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        corso_docente
        (corso_id, docente_id) 
    values
        (?, ?)
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        aule a1_0 
    where
        a1_0.nome=? 
    fetch
        first ? rows only
Hibernate: 
    select
        a1_0.id 
    from
        aule a1_0 
    where
        a1_0.nome=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        aule
        (capienza, nome) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        aule
        (capienza, nome) 
    values
        (?, ?)
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        l1_0.id 
    from
        lezioni l1_0 
    where
        l1_0.titolo=? 
    fetch
        first ? rows only
Hibernate: 
    select
        l1_0.id 
    from
        lezioni l1_0 
    where
        l1_0.titolo=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        lezioni
        (aula_id, corso_id, data_ora, descrizione, docente_id, durata, titolo) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        lezioni
        (aula_id, corso_id, data_ora, descrizione, docente_id, durata, titolo) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        md1_0.id 
    from
        materiali_didattici md1_0 
    where
        md1_0.titolo=? 
    fetch
        first ? rows only
Hibernate: 
    select
        md1_0.id 
    from
        materiali_didattici md1_0 
    where
        md1_0.titolo=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        materiali_didattici
        (lezione_id, tipo, titolo, url) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        materiali_didattici
        (lezione_id, tipo, titolo, url) 
    values
        (?, ?, ?, ?)
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        i1_0.id 
    from
        iscrizioni i1_0 
    where
        i1_0.studente_id=? 
        and i1_0.corso_id=? 
    fetch
        first ? rows only
Hibernate: 
    select
        i1_0.id 
    from
        iscrizioni i1_0 
    where
        i1_0.studente_id=? 
        and i1_0.corso_id=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        iscrizioni
        (corso_id, data_iscrizione, metodo_pagamento, stato, studente_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        iscrizioni
        (corso_id, data_iscrizione, metodo_pagamento, stato, studente_id) 
    values
        (?, ?, ?, ?, ?)
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        v1_0.id 
    from
        valutazioni v1_0 
    where
        v1_0.iscrizione_id=? 
    fetch
        first ? rows only
Hibernate: 
    select
        v1_0.id 
    from
        valutazioni v1_0 
    where
        v1_0.iscrizione_id=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        valutazioni
        (commento, data_valutazione, iscrizione_id, voto) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        valutazioni
        (commento, data_valutazione, iscrizione_id, voto) 
    values
        (?, ?, ?, ?)
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id 
    from
        pagamenti p1_0 
    where
        p1_0.iscrizione_id=? 
    fetch
        first ? rows only
Hibernate: 
    select
        p1_0.id 
    from
        pagamenti p1_0 
    where
        p1_0.iscrizione_id=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        pagamenti
        (data_pagamento, importo, iscrizione_id, metodo_pagamento) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pagamenti
        (data_pagamento, importo, iscrizione_id, metodo_pagamento) 
    values
        (?, ?, ?, ?)
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id 
    from
        presenze p1_0 
    where
        p1_0.iscrizione_id=? 
        and p1_0.lezione_id=? 
    fetch
        first ? rows only
Hibernate: 
    select
        p1_0.id 
    from
        presenze p1_0 
    where
        p1_0.iscrizione_id=? 
        and p1_0.lezione_id=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        presenze
        (data_presenza, iscrizione_id, lezione_id, presente) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        presenze
        (data_presenza, iscrizione_id, lezione_id, presente) 
    values
        (?, ?, ?, ?)
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        utenti u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        utenti u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        utenti u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        utenti u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        utenti u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        utenti u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        utenti u1_0 
    where
        u1_0.email=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        utenti u1_0 
    where
        u1_0.email=?
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        docenti d1_0 
    join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        d1_0.utente_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        docenti d1_0 
    join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        d1_0.utente_id=?
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        studenti s1_0 
    join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        s1_0.utente_id=?
Hibernate: 
    select
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        studenti s1_0 
    join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        s1_0.utente_id=?
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id 
    from
        studenti s1_0 
    where
        s1_0.utente_id=? 
    fetch
        first ? rows only
Hibernate: 
    select
        s1_0.id 
    from
        studenti s1_0 
    where
        s1_0.utente_id=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        utenti u1_0 
    where
        u1_0.email=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        utenti u1_0 
    where
        u1_0.email=?
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        docenti d1_0 
    join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        d1_0.utente_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        docenti d1_0 
    join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        d1_0.utente_id=?
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        studenti s1_0 
    join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        s1_0.utente_id=?
Hibernate: 
    select
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        studenti s1_0 
    join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        s1_0.utente_id=?
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        d1_0.id 
    from
        docenti d1_0 
    where
        d1_0.utente_id=? 
    fetch
        first ? rows only
Hibernate: 
    select
        d1_0.id 
    from
        docenti d1_0 
    where
        d1_0.utente_id=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        categorie c1_0 
    where
        c1_0.nome=? 
    fetch
        first ? rows only
Hibernate: 
    select
        c1_0.id 
    from
        categorie c1_0 
    where
        c1_0.nome=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        corsi c1_0 
    where
        c1_0.nome=? 
    fetch
        first ? rows only
Hibernate: 
    select
        c1_0.id 
    from
        corsi c1_0 
    where
        c1_0.nome=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        aule a1_0 
    where
        a1_0.nome=? 
    fetch
        first ? rows only
Hibernate: 
    select
        a1_0.id 
    from
        aule a1_0 
    where
        a1_0.nome=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        l1_0.id 
    from
        lezioni l1_0 
    where
        l1_0.titolo=? 
    fetch
        first ? rows only
Hibernate: 
    select
        l1_0.id 
    from
        lezioni l1_0 
    where
        l1_0.titolo=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        md1_0.id 
    from
        materiali_didattici md1_0 
    where
        md1_0.titolo=? 
    fetch
        first ? rows only
Hibernate: 
    select
        md1_0.id 
    from
        materiali_didattici md1_0 
    where
        md1_0.titolo=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        studenti s1_0 
    where
        s1_0.utente_id=?
Hibernate: 
    select
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        studenti s1_0 
    where
        s1_0.utente_id=?
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        utenti u1_0 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        utenti u1_0 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        u1_0.id=?
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.categoria_id,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo 
    from
        corsi c1_0 
    where
        c1_0.nome=?
Hibernate: 
    select
        c1_0.id,
        c1_0.categoria_id,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo 
    from
        corsi c1_0 
    where
        c1_0.nome=?
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.descrizione,
        c1_0.icona,
        c1_0.nome 
    from
        categorie c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.descrizione,
        c1_0.icona,
        c1_0.nome 
    from
        categorie c1_0 
    where
        c1_0.id=?
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        i1_0.id 
    from
        iscrizioni i1_0 
    where
        i1_0.studente_id=? 
        and i1_0.corso_id=? 
    fetch
        first ? rows only
Hibernate: 
    select
        i1_0.id 
    from
        iscrizioni i1_0 
    where
        i1_0.studente_id=? 
        and i1_0.corso_id=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.corso_id,
        i1_0.data_iscrizione,
        i1_0.metodo_pagamento,
        i1_0.stato,
        i1_0.studente_id 
    from
        iscrizioni i1_0 
    where
        i1_0.studente_id=? 
        and i1_0.corso_id=?
Hibernate: 
    select
        i1_0.id,
        i1_0.corso_id,
        i1_0.data_iscrizione,
        i1_0.metodo_pagamento,
        i1_0.stato,
        i1_0.studente_id 
    from
        iscrizioni i1_0 
    where
        i1_0.studente_id=? 
        and i1_0.corso_id=?
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo 
    from
        corsi c1_0 
    join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    where
        c1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo 
    from
        corsi c1_0 
    join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    where
        c1_0.id=?
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        studenti s1_0 
    join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        s1_0.id=?
Hibernate: 
    select
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id,
        u1_0.id,
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo 
    from
        studenti s1_0 
    join
        utenti u1_0 
            on u1_0.id=s1_0.utente_id 
    left join
        docenti d1_0 
            on u1_0.id=d1_0.utente_id 
    where
        s1_0.id=?
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        v1_0.id 
    from
        valutazioni v1_0 
    where
        v1_0.iscrizione_id=? 
    fetch
        first ? rows only
Hibernate: 
    select
        v1_0.id 
    from
        valutazioni v1_0 
    where
        v1_0.iscrizione_id=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id 
    from
        pagamenti p1_0 
    where
        p1_0.iscrizione_id=? 
    fetch
        first ? rows only
Hibernate: 
    select
        p1_0.id 
    from
        pagamenti p1_0 
    where
        p1_0.iscrizione_id=? 
    fetch
        first ? rows only
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        l1_0.id,
        l1_0.aula_id,
        l1_0.corso_id,
        l1_0.data_ora,
        l1_0.descrizione,
        l1_0.docente_id,
        l1_0.durata,
        l1_0.titolo 
    from
        lezioni l1_0 
    where
        l1_0.titolo=?
Hibernate: 
    select
        l1_0.id,
        l1_0.aula_id,
        l1_0.corso_id,
        l1_0.data_ora,
        l1_0.descrizione,
        l1_0.docente_id,
        l1_0.durata,
        l1_0.titolo 
    from
        lezioni l1_0 
    where
        l1_0.titolo=?
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.capienza,
        a1_0.nome 
    from
        aule a1_0 
    where
        a1_0.id=?
Hibernate: 
    select
        a1_0.id,
        a1_0.capienza,
        a1_0.nome 
    from
        aule a1_0 
    where
        a1_0.id=?
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo 
    from
        corsi c1_0 
    join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    where
        c1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.categoria_id,
        c2_0.id,
        c2_0.descrizione,
        c2_0.icona,
        c2_0.nome,
        c1_0.descrizione,
        c1_0.durata,
        c1_0.max_studenti,
        c1_0.nome,
        c1_0.prezzo 
    from
        corsi c1_0 
    join
        categorie c2_0 
            on c2_0.id=c1_0.categoria_id 
    where
        c1_0.id=?
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        docenti d1_0 
    join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        d1_0.id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.cognome,
        d1_0.cv,
        d1_0.nome,
        d1_0.specializzazione,
        d1_0.tariffa,
        d1_0.utente_id,
        u1_0.id,
        u1_0.email,
        u1_0.password,
        u1_0.ruolo,
        s1_0.id,
        s1_0.cognome,
        s1_0.data_nascita,
        s1_0.indirizzo,
        s1_0.nome,
        s1_0.telefono,
        s1_0.utente_id 
    from
        docenti d1_0 
    join
        utenti u1_0 
            on u1_0.id=d1_0.utente_id 
    left join
        studenti s1_0 
            on u1_0.id=s1_0.utente_id 
    where
        d1_0.id=?
2025-04-23 17:11:16 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id 
    from
        presenze p1_0 
    where
        p1_0.iscrizione_id=? 
        and p1_0.lezione_id=? 
    fetch
        first ? rows only
Hibernate: 
    select
        p1_0.id 
    from
        presenze p1_0 
    where
        p1_0.iscrizione_id=? 
        and p1_0.lezione_id=? 
    fetch
        first ? rows only
]]></system-out>
  </testcase>
</testsuite>